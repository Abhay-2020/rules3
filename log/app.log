2020-04-07 11:24:59,447 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-07 11:24:59,492 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-07 11:24:59,496 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-07 11:25:00,052 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-07 11:25:00,428 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-07 11:25:00,466 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2569afda, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@28dd8786, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@70efdd18, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@247a8411, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4c05f83b, org.springframework.test.context.event.EventPublishingTestExecutionListener@820b78a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a9ac8b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7683ea43, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@15a41088, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@18356951, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@53335328]
2020-04-07 11:25:05,365 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-07 11:25:07,764 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-07 11:25:07,766 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rulesengine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-07 11:25:07,829 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-07 11:25:10,340 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-07 11:25:10,931 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=63acf169-29ca-38e9-a4a4-909c93bd8f9d
2020-04-07 11:25:11,332 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-07 11:25:12,277 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-07 11:25:12,277 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-07 11:25:12,317 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@295be010
2020-04-07 11:25:15,599 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-07 11:25:15,992 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-07 11:25:16,376 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-07 11:25:16,376 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-07 11:25:17,145 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-07 11:25:19,364 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-07 11:25:19,745 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8c15c706766411bf835c25', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:280}] to localhost:27017
2020-04-07 11:25:19,767 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8c15c706766411bf835c25', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13060600}
2020-04-07 11:25:21,194 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-07 11:25:21,515 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-07 11:25:21,594 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-07 11:25:21,760 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-07 11:25:22,232 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-07 11:25:22,240 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-07 11:25:22,382 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 21.144 seconds (JVM running for 26.141)
2020-04-07 11:25:26,057 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-07 11:25:28,084 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-07 11:25:28,085 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rulesengine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-07 11:25:28,086 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-07 11:25:29,415 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4c248575-7aa4-3af6-9cdb-dee0c69cacc5
2020-04-07 11:25:29,466 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-07 11:25:30,048 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-07 11:25:30,086 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-07 11:25:30,088 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-07 11:25:30,088 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-07 11:25:30,631 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-07 11:25:30,632 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 2536 ms
2020-04-07 11:25:32,287 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-07 11:25:32,350 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-07 11:25:32,368 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-07 11:25:32,464 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-07 11:25:32,583 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-07 11:25:32,595 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8c15d406766411bf835c26', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:281}] to localhost:27017
2020-04-07 11:25:32,600 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8c15d406766411bf835c26', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2355300}
2020-04-07 11:25:33,449 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-07 11:25:33,549 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-07 11:25:33,667 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-07 11:25:33,932 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-07 11:25:33,932 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-07 11:25:34,350 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-07 11:25:34,350 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-07 11:25:35,112 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-07 11:25:35,792 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-07 11:25:35,792 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-07 11:25:35,792 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-07 11:25:35,792 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-07 11:25:35,792 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-07 11:25:35,792 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-07 11:25:35,792 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-07 11:25:36,210 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-07 11:25:36,216 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-07 11:25:36,221 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-07 11:25:36,230 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1586238936227 with initial instances count: 2
2020-04-07 11:25:36,232 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULESENGINE with eureka with status UP
2020-04-07 11:25:36,234 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1586238936234, current=UP, previous=STARTING]
2020-04-07 11:25:36,239 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-07 11:25:36,240 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776: registering service...
2020-04-07 11:25:36,241 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-07 11:25:36,254 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-07 11:25:36,309 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776 - registration status: 204
2020-04-07 11:25:36,411 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-07 11:25:36,415 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-07 11:25:36,467 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-07 11:25:36,517 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-07 11:25:36,518 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-07 11:25:37,201 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 13.149 seconds (JVM running for 40.961)
2020-04-07 11:25:37,444 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-07 11:25:37,445 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-07 11:25:37,666 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-07 11:25:37,666 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-07 11:25:37,743 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULESENGINE with eureka with status DOWN
2020-04-07 11:25:37,744 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1586238937744, current=DOWN, previous=UP]
2020-04-07 11:25:37,744 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776: registering service...
2020-04-07 11:25:37,745 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-07 11:25:37,757 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULESENGINE with eureka with status DOWN
2020-04-07 11:25:37,758 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776 - registration status: 204
2020-04-07 11:25:38,151 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-07 11:25:38,151 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-07 11:25:38,167 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-07 11:25:41,172 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-07 11:25:41,182 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776 - deregister  status: 200
2020-04-07 11:25:41,204 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-07 14:34:58,847 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sapient.rulesengine.RulesEngineApplicationTests], using SpringBootContextLoader
2020-04-07 14:34:58,876 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-07 14:34:58,879 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [com.sapient.rulesengine.RulesEngineApplicationTests]: RulesEngineApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-07 14:34:59,347 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration com.sapient.rulesengine.RulesEngineApplication for test class com.sapient.rulesengine.RulesEngineApplicationTests
2020-04-07 14:34:59,753 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2020-04-07 14:34:59,793 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5d10df04, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@56d3af4d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@43b7bd5a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@37fd496a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6c4e486e, org.springframework.test.context.event.EventPublishingTestExecutionListener@27ac3b6d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@598f1faf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@464abed, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1af78e37, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5c46a957, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7d95a717]
2020-04-07 14:35:04,441 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-07 14:35:06,798 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-07 14:35:06,799 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rulesengine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-07 14:35:06,850 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] No active profile set, falling back to default profiles: default
2020-04-07 14:35:09,160 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-07 14:35:09,544 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=63acf169-29ca-38e9-a4a4-909c93bd8f9d
2020-04-07 14:35:09,985 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-07 14:35:10,907 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-07 14:35:10,907 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-07 14:35:10,947 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5b9a8692
2020-04-07 14:35:13,141 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-07 14:35:13,388 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-07 14:35:13,705 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-04-07 14:35:13,705 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-07 14:35:14,282 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-07 14:35:15,614 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-07 14:35:15,751 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8c424b0201a011ff8ee19c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:282}] to localhost:27017
2020-04-07 14:35:15,762 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8c424b0201a011ff8ee19c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6819800}
2020-04-07 14:35:16,638 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-07 14:35:16,865 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-07 14:35:16,902 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-07 14:35:16,980 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-07 14:35:17,219 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-07 14:35:17,225 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-07 14:35:17,331 INFO com.sapient.rulesengine.RulesEngineApplicationTests [main] Started RulesEngineApplicationTests in 16.725 seconds (JVM running for 21.636)
2020-04-07 14:35:21,262 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8888
2020-04-07 14:35:23,293 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-07 14:35:23,294 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rulesengine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-07 14:35:23,297 INFO com.sapient.rulesengine.RulesEngineApplication [main] No active profile set, falling back to default profiles: default
2020-04-07 14:35:24,014 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=4c248575-7aa4-3af6-9cdb-dee0c69cacc5
2020-04-07 14:35:24,041 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-07 14:35:24,406 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8776 (http)
2020-04-07 14:35:24,427 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-07 14:35:24,427 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2020-04-07 14:35:24,428 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-07 14:35:24,730 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2020-04-07 14:35:24,730 INFO org.springframework.web.context.ContextLoader [main] Root WebApplicationContext: initialization completed in 1417 ms
2020-04-07 14:35:25,911 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-07 14:35:25,954 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-07 14:35:25,962 WARN org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration [main] Netflix ConfigurationManager has already been installed, unable to re-install
2020-04-07 14:35:26,012 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-07 14:35:26,086 INFO org.mongodb.driver.cluster [main] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-07 14:35:26,095 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8c42560201a011ff8ee19d', description='null'}-localhost:27017] Opened connection [connectionId{localValue:2, serverValue:283}] to localhost:27017
2020-04-07 14:35:26,098 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8c42560201a011ff8ee19d', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1891400}
2020-04-07 14:35:26,683 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-07 14:35:26,739 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-04-07 14:35:26,811 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-04-07 14:35:26,982 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-04-07 14:35:26,982 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-04-07 14:35:27,298 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-04-07 14:35:27,298 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-04-07 14:35:27,690 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-04-07 14:35:28,024 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-04-07 14:35:28,024 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-04-07 14:35:28,024 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-04-07 14:35:28,024 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-04-07 14:35:28,024 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-04-07 14:35:28,025 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-04-07 14:35:28,025 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-04-07 14:35:28,282 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-04-07 14:35:28,288 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-04-07 14:35:28,293 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-07 14:35:28,299 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1586250328297 with initial instances count: 2
2020-04-07 14:35:28,301 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application RULESENGINE with eureka with status UP
2020-04-07 14:35:28,302 INFO com.netflix.discovery.DiscoveryClient [main] Saw local status change event StatusChangeEvent [timestamp=1586250328302, current=UP, previous=STARTING]
2020-04-07 14:35:28,306 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2020-04-07 14:35:28,307 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776: registering service...
2020-04-07 14:35:28,308 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2020-04-07 14:35:28,320 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2020-04-07 14:35:28,369 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776 - registration status: 204
2020-04-07 14:35:28,423 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_1
2020-04-07 14:35:28,429 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [main] Generating unique operation named: handleUsingGET_2
2020-04-07 14:35:28,479 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8776"]
2020-04-07 14:35:28,527 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-07 14:35:28,528 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8776
2020-04-07 14:35:28,989 INFO com.sapient.rulesengine.RulesEngineApplication [main] Started RulesEngineApplication in 9.477 seconds (JVM running for 33.295)
2020-04-07 14:35:29,199 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-07 14:35:29,199 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-07 14:35:29,361 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] Before
2020-04-07 14:35:29,361 DEBUG com.sapient.logger.LeaderboardAspectLogger [main] After
2020-04-07 14:35:29,431 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULESENGINE with eureka with status DOWN
2020-04-07 14:35:29,432 WARN com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1586250329432, current=DOWN, previous=UP]
2020-04-07 14:35:29,432 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776: registering service...
2020-04-07 14:35:29,433 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [SpringContextShutdownHook] Setting initial instance status as: STARTING
2020-04-07 14:35:29,437 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application RULESENGINE with eureka with status DOWN
2020-04-07 14:35:29,443 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776 - registration status: 204
2020-04-07 14:35:29,701 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-07 14:35:29,701 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-07 14:35:29,713 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2020-04-07 14:35:32,720 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2020-04-07 14:35:32,743 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776 - deregister  status: 200
2020-04-07 14:35:32,792 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2020-04-07 14:38:17,104 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-04-07 14:38:18,012 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Fetching config from server at : http://localhost:8888
2020-04-07 14:38:20,177 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2020-04-07 14:38:20,178 WARN org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [restartedMain] Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/rulesengine/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2020-04-07 14:38:20,186 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-04-07 14:38:21,878 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-07 14:38:22,179 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=d1f61e99-0293-3af0-b12d-91502b763652
2020-04-07 14:38:22,397 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'com.sapient.rulesengine.RulesServiceProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-07 14:38:23,893 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8776 (http)
2020-04-07 14:38:23,915 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Initializing ProtocolHandler ["http-nio-8776"]
2020-04-07 14:38:23,916 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2020-04-07 14:38:23,917 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-07 14:38:24,148 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2020-04-07 14:38:24,148 INFO org.springframework.web.context.ContextLoader [restartedMain] Root WebApplicationContext: initialization completed in 3877 ms
2020-04-07 14:38:24,334 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-07 14:38:24,334 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-07 14:38:24,366 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@32a8f7f0
2020-04-07 14:38:25,648 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] Unable to start LiveReload server
2020-04-07 14:38:26,214 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-07 14:38:26,320 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [restartedMain] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-07 14:38:26,349 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2020-04-07 14:38:26,350 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-07 14:38:26,672 INFO org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-04-07 14:38:27,137 INFO org.mongodb.driver.cluster [restartedMain] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-07 14:38:27,214 INFO org.mongodb.driver.connection [cluster-ClusterId{value='5e8c430bf1f32632b8898c2c', description='null'}-localhost:27017] Opened connection [connectionId{localValue:1, serverValue:284}] to localhost:27017
2020-04-07 14:38:27,222 INFO org.mongodb.driver.cluster [cluster-ClusterId{value='5e8c430bf1f32632b8898c2c', description='null'}-localhost:27017] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 3]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4936300}
2020-04-07 14:38:27,852 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-07 14:38:27,949 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2020-04-07 14:38:28,092 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2020-04-07 14:38:28,203 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2020-04-07 14:38:28,204 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2020-04-07 14:38:28,377 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2020-04-07 14:38:28,377 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2020-04-07 14:38:28,583 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2020-04-07 14:38:28,975 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2020-04-07 14:38:28,975 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2020-04-07 14:38:28,975 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2020-04-07 14:38:28,976 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2020-04-07 14:38:28,976 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2020-04-07 14:38:28,976 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2020-04-07 14:38:28,976 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2020-04-07 14:38:29,172 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2020-04-07 14:38:29,176 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2020-04-07 14:38:29,182 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-07 14:38:29,188 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1586250509186 with initial instances count: 2
2020-04-07 14:38:29,190 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application RULESENGINE with eureka with status UP
2020-04-07 14:38:29,191 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1586250509191, current=UP, previous=STARTING]
2020-04-07 14:38:29,194 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776: registering service...
2020-04-07 14:38:29,195 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Context refreshed
2020-04-07 14:38:29,222 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [restartedMain] Found 1 custom documentation plugin(s)
2020-04-07 14:38:29,244 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_RULESENGINE/WKWIN2657595.global.publicisgroupe.net:rulesengine:8776 - registration status: 204
2020-04-07 14:38:29,281 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [restartedMain] Scanning for api listing references
2020-04-07 14:38:29,477 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_1
2020-04-07 14:38:29,482 INFO springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator [restartedMain] Generating unique operation named: handleUsingGET_2
2020-04-07 14:38:29,554 INFO org.apache.coyote.http11.Http11NioProtocol [restartedMain] Starting ProtocolHandler ["http-nio-8776"]
2020-04-07 14:38:29,592 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8776 (http) with context path ''
2020-04-07 14:38:29,592 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8776
2020-04-07 14:38:30,144 INFO com.sapient.rulesengine.RulesEngineApplication [restartedMain] Started RulesEngineApplication in 14.423 seconds (JVM running for 15.753)
2020-04-07 14:40:16,524 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8776-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-07 14:40:16,524 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Initializing Servlet 'dispatcherServlet'
2020-04-07 14:40:16,542 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8776-exec-1] Completed initialization in 18 ms
2020-04-07 14:40:16,604 DEBUG com.sapient.logger.LeaderboardAspectLogger [http-nio-8776-exec-1] Before
2020-04-07 14:40:16,614 DEBUG com.sapient.logger.LeaderboardAspectLogger [http-nio-8776-exec-1] After
2020-04-07 14:43:28,981 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
